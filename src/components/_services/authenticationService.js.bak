import { BehaviorSubject } from 'rxjs';
import  authHeader  from 'src/components/_helpers/authHeader';

import  handleResponse  from 'src/components/_helpers/handleResponse';

const currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));

 const authenticationService = {
    login,
    userInfos,
    logout,
    currentUser: currentUserSubject.asObservable(),
    get currentUserValue () { return currentUserSubject.value }
};

function login(username, password) {
    const requestOptions = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password })
    };

    return fetch(`http://18.234.128.169/projet-my-dev-skill-tree-back/public/api/login_check`, requestOptions)
        .then(handleResponse)
        .then(user => {
            // store user details and jwt token in local storage to keep user logged in between page refreshes
            localStorage.setItem('currentUser', JSON.stringify(user));
            currentUserSubject.next(user);
            userInfos(username);
            return user;
            
        });     
}

function userInfos(username) {
    const requestOptions = { method: 'GET', headers: authHeader() };
    return fetch(`http://18.234.128.169/projet-my-dev-skill-tree-back/public/api/users/${username}`, requestOptions)
        .then(handleResponse)
        .then(userInfos => {
            // store user details and jwt token in local storage to keep user logged in between page refreshes
            localStorage.setItem('pseudo', JSON.stringify(userInfos.pseudonym));
            currentUserSubject.next(userInfos);
            console.log(userInfos.pseudonym)
            return userInfos;
        });
}

function logout() {
    // remove user from local storage to log user out
    localStorage.removeItem('currentUser');
    currentUserSubject.next(null);
}

export default authenticationService;
